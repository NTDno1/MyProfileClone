import React, { createContext, useContext, useState, useEffect } from 'react';

type Language = 'en' | 'vi';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations = {
  en: {
    // Navigation
    'nav.home': 'Home',
    'nav.about': 'About',
    'nav.experience': 'Experience',
    'nav.services': 'Services',
    'nav.works': 'Works',
    'nav.blog': 'Blog',
    'nav.contact': 'Contact',
    
    // Hero Section
    'hero.title': "I'm a",
    'hero.hire': 'Hire Me',
    'hero.scroll': 'Scroll Down',
    
    // About Section
    'about.title': 'About Me',
    'about.description': 'Hi, I am Nguy·ªÖn Ti·∫øn ƒê·∫°t, I am a backend developer specializing in designing secure and efficient systems using languages like C#, and databases like SQL Server. Passionate about problem-solving and learning new technologies, I always aim for optimal and sustainable solutions. I work from Thanh M·ªπ - S∆°n T√¢y - H√† N·ªôi, Vietnam.',
    'about.download': 'Download CV',
    'about.view': 'View CV',
    'about.projects': 'Projects Completed',
    'about.coffee': 'Cup of Coffee',
    'about.clients': 'Satisfied clients',
    'about.experience': 'Years of experience',
    
    // Experience Section
    'experience.title': 'Experience',
    'experience.vnr.title': 'Back-End Developer',
    'experience.vnr.company': 'VNR Software',
    'experience.vnr.period': 'Jan 2024 - Present',
    'experience.vnr.description': 'Developed and deployed an ERP application using .NET 9 and Angular, implementing CQRS architecture and modern DevOps practices. Integrated Redis, RabbitMQ and SignalR to enable real-time communication, distributed messaging and secure multi-device authentication. Optimized system performance with LINQ, stored procedures and background jobs using Quartz. Integrated AWS S3 for file storage and deployed the application on both Windows (IIS) and Ubuntu (Docker, Docker Compose), ensuring high availability and scalability.',
    
    'experience.hoplong.title': 'Fullstack Developer',
    'experience.hoplong.company': 'HOP LONG TECH',
    'experience.hoplong.period': 'Aug 2022 - Dec 2023',
    'experience.hoplong.description': 'Experienced in developing scalable enterprise systems using .NET and modern architectural patterns. Successfully delivered ERP and integration solutions with a strong focus on performance, maintainability, and clean architecture. Led the development and maintenance of a full-scale ERP application covering key business modules such as Finance, Supply Chain, Inventory, HR, and CRM.',
    
    // Education Section
    'education.title': 'Education',
    'education.bachelor.degree': 'Bachelor of Software Engineering',
    'education.bachelor.school': 'FPT University',
    'education.bachelor.period': 'Sep 2019 - Sep 2024',
    'education.bachelor.description': 'Studied Software Engineering with focus on modern development practices, system design, and software architecture.',
    
    'education.master.degree': 'Master of Information System',
    'education.master.school': 'PTIT University',
    'education.master.period': 'Jul 2025 - Jul 2027',
    'education.master.description': 'Pursuing Master degree in Information System to deepen knowledge in enterprise systems and data management.',
    
    // Services Section
    'services.title': 'Services',
    'services.backend.name': 'Backend Development',
    'services.backend.description': 'Design and develop secure, scalable backend systems using .NET, C#, and modern architectural patterns like Clean Architecture and CQRS.',
    'services.database.name': 'Database Design',
    'services.database.description': 'Expert in SQL Server database design, optimization, and management. Experienced with Entity Framework Core and LINQ for efficient data access.',
    'services.integration.name': 'System Integration',
    'services.integration.description': 'Build middleware services and API integrations for e-commerce platforms, ERP systems, and third-party services with real-time synchronization.',
    'services.custom': 'Looking for a custom service?',
    'services.contact': 'Click here to contact me!',
    
    // Works Section
    'works.title': 'Recent Works',
    'works.view': 'View All',
    
    // Contact Section
    'contact.title': 'Get In Touch',
    'contact.description': "Don't like forms? Send me an email. üëã",
    'contact.email': 'Email',
    'contact.phone': 'Phone',
    'contact.location': 'Location',
    'contact.github': 'GitHub',
    'contact.linkedin': 'LinkedIn',
    'contact.facebook': 'Facebook',
    'contact.talk': "Let's talk about everything!",
    
    // Contact Page
    'contact.page.title': 'Contact Me',
    'contact.page.breadcrumb.home': 'Home',
    'contact.page.breadcrumb.contact': 'Contact',
    'contact.page.form.name': 'Your Name',
    'contact.page.form.email': 'Email Address',
    'contact.page.form.subject': 'Subject',
    'contact.page.form.message': 'Message',
    'contact.page.form.submit': 'Send Message',
    'contact.page.address': 'Address',
    'contact.page.social': 'Social Media',
    'contact.page.greeting': "Don't like forms? Send me an email. üëã",
    
    // CV Page
    'cv.name': 'Nguy·ªÖn Ti·∫øn ƒê·∫°t',
    'cv.position': 'Backend Developer',
    'cv.aboutMe.title': 'ABOUT ME',
    'cv.aboutMe.content': 'I am a backend developer specializing in designing secure and efficient systems using languages like C#, and databases like SQL Server. Passionate about problem-solving and learning new technologies, I always aim for optimal and sustainable solutions.',
    'cv.skills.title': 'SKILLS',
    'cv.education.title': 'EDUCATION',
    'cv.education.bachelor': 'BACHELOR',
    'cv.education.master': 'Master',
    'cv.education.bachelor.school': 'FPT University',
    'cv.education.bachelor.major': 'Software Engineer',
    'cv.education.master.school': 'PTIT University',
    'cv.education.master.major': 'Information System (IS)',
    'cv.futureGoals.title': 'FUTURE GOALS',
    'cv.futureGoals.ielts': 'IELTS 6.5 - 7.0',
    'cv.futureGoals.fullstack': 'Fullstack developer',
    'cv.workExperience.title': 'WORK EXPERIENCE',
    'cv.workExperience.overview': 'Overview',
    'cv.workExperience.description': 'Description:',
    'cv.workExperience.techStack': 'Tech Stack:',
    'cv.workExperience.achievements': 'Achievements:',
    'cv.vnr.position': 'Back-End Developer',
    'cv.vnr.period': '1/2024 - Now',
    'cv.vnr.overview1': 'Developed and deployed an ERP application using .NET 9 and Angular, implementing CQRS architecture and modern DevOps practices. Integrated Redis, RabbitMQ and SignalR to enable real-time communication, distributed messaging and secure multi-device authentication.',
    'cv.vnr.overview2': 'Optimized system performance with LINQ, stored procedures and background jobs using Quartz. Integrated AWS S3 for file storage and deployed the application on both Windows (IIS) and Ubuntu (Docker, Docker Compose), ensuring high availability and scalability.',
    'cv.vnr.project1.title': '1. ERP System ‚Äî V2 (Enterprise Resource Planning)',
    'cv.vnr.project1.description': 'Contributed to the development and maintenance of an enterprise-level ERP system designed to manage finance, inventory, supply chain and HR modules across multiple departments. The project focused on modernizing the existing system by applying CQRS, improving deployment strategy, and adding real-time communication and distributed processing components.',
    'cv.vnr.project1.techStack': '.NET 9, PostgreSQL, Angular, Redis, RabbitMQ, SignalR, AWS S3, Docker/Docker Compose, Quartz.',
    'cv.vnr.project1.achievement1': 'Designed and implemented Redis-based authentication to manage access tokens and prevent unauthorized logins across multiple devices.',
    'cv.vnr.project1.achievement2': 'Integrated RabbitMQ and SignalR to process background jobs and push real-time notifications to users.',
    'cv.vnr.project1.achievement3': 'Used Quartz to schedule and execute background tasks (periodic jobs and data synchronization).',
    'cv.vnr.project1.achievement4': 'Improved performance by applying LINQ for data manipulation and stored procedures for complex queries in PostgreSQL.',
    'cv.vnr.project1.achievement5': 'Implemented and configured AWS S3 to securely store and manage user files.',
    'cv.vnr.project1.achievement6': 'Deployed the system on IIS (Windows) and Docker/Docker Compose (Ubuntu), enabling flexible and consistent environments across staging and production.',
    'cv.hoplong.position': 'Fullstack Developer',
    'cv.hoplong.period': '08/2022 - 12/2023',
    'cv.hoplong.overview': 'Experienced in developing scalable enterprise systems using .NET and modern architectural patterns. Successfully delivered ERP and integration solutions with a strong focus on performance, maintainability, and clean architecture.',
    'cv.hoplong.project1.title': '1. ERP System',
    'cv.hoplong.project1.description': 'Led the development and maintenance of a full-scale ERP application covering key business modules such as Finance, Supply Chain, Inventory, HR, and CRM. The project was developed following the MVC architectural model, with a strong focus on scalability, maintainability, and performance.',
    'cv.hoplong.project1.techStack': '.NET, SQL Server, AngularJS.',
    'cv.hoplong.project1.achievement1': 'Utilized Dapper and LINQ for efficient data access and manipulation, optimizing database queries ‚Üí reduced response time and improved throughput.',
    'cv.hoplong.project1.achievement2': 'Designed and developed configurable reporting features tailored to multiple departments.',
    'cv.hoplong.project1.achievement3': 'Built responsive and user-friendly frontend modules with AngularJS, ensuring smooth interaction and real-time updates across ERP modules.',
    'cv.hoplong.project1.achievement4': 'Ensured high system stability and reliability during daily operational use by applying clean architecture principles and performance tuning.',
    'cv.hoplong.project2.title': '2. System connect with Ecomerce platform',
    'cv.hoplong.project2.description': 'Built from scratch a middleware service to integrate TikTok platform APIs and synchronize data with the ERP system. The solution was designed based on my base architecture and implemented using a Three-Layer Architecture (Presentation, Business Logic, Data Access) to ensure extensibility, maintainability, and scalability for future e-commerce platforms.',
    'cv.hoplong.project2.techStack': '.NET, SQL Server',
    'cv.hoplong.project2.achievement1': 'Built a bi-directional API integration with TikTok, leveraging webhook support for real-time synchronization of orders, inventory, and customer data.',
    'cv.hoplong.project2.achievement2': 'Automated ETL workflows to ensure accurate and timely ingestion of marketing and sales data across multiple platforms.',
    'cv.hoplong.project2.achievement3': 'Developed a Facebook Ads data pipeline, extracting and transforming campaign insights, ad performance reports, revenue, and cost metrics for consolidated ERP reporting.',
    'cv.hoplong.project2.achievement4': 'Implemented a Facebook Ads data pipeline to extract, transform, and load campaign performance metrics into the ERP system.',
    'cv.personalProject.title': 'PERSONAL PROJECT',
    'cv.personalProject.ecommerce.title': 'E-Commerce Project',
    'cv.personalProject.ecommerce.techStack': 'Core, Data: .NET 9, C# 13, ASP.NET Core, EF Core, PostgreSQL.',
    'cv.personalProject.ecommerce.patterns': 'Patterns: Clean Architecture, CQRS.',
    'cv.personalProject.ecommerce.utilities': 'Utilities: FluentValidation, AutoMapper, Serilog.',
    'cv.personalProject.ecommerce.description': 'This is a robust e-commerce platform built with .NET 9, utilizing ASP.NET Core, Entity Framework Core, and MediatR. It follows Clean Architecture and CQRS design patterns for scalability and maintainability. Key features include secure user authentication with JWT, comprehensive product management, and robust validation with FluentValidation. The project use PostgreSQL for data storage, integrates extensive logging and error handling, and supports unit and integration testing for reliability. It is designed to handle high-traffic environments with a strong focus on security and performance optimization.',
  },
  vi: {
    // Navigation
    'nav.home': 'Trang ch·ªß',
    'nav.about': 'Gi·ªõi thi·ªáu',
    'nav.experience': 'Kinh nghi·ªám',
    'nav.services': 'D·ªãch v·ª•',
    'nav.works': 'D·ª± √°n',
    'nav.blog': 'Blog',
    'nav.contact': 'Li√™n h·ªá',
    
    // Hero Section
    'hero.title': 'T√¥i l√†',
    'hero.hire': 'Thu√™ t√¥i',
    'hero.scroll': 'Cu·ªôn xu·ªëng',
    
    // About Section
    'about.title': 'Gi·ªõi thi·ªáu',
    'about.description': 'Xin ch√†o, t√¥i l√† Nguy·ªÖn Ti·∫øn ƒê·∫°t, t√¥i l√† m·ªôt backend developer chuy√™n thi·∫øt k·∫ø c√°c h·ªá th·ªëng b·∫£o m·∫≠t v√† hi·ªáu qu·∫£ s·ª≠ d·ª•ng c√°c ng√¥n ng·ªØ nh∆∞ C# v√† c∆° s·ªü d·ªØ li·ªáu nh∆∞ SQL Server. ƒêam m√™ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v√† h·ªçc h·ªèi c√¥ng ngh·ªá m·ªõi, t√¥i lu√¥n h∆∞·ªõng t·ªõi c√°c gi·∫£i ph√°p t·ªëi ∆∞u v√† b·ªÅn v·ªØng. T√¥i l√†m vi·ªác t·∫°i Thanh M·ªπ - S∆°n T√¢y - H√† N·ªôi, Vi·ªát Nam.',
    'about.download': 'T·∫£i CV',
    'about.view': 'Xem CV',
    'about.projects': 'D·ª± √°n ƒë√£ ho√†n th√†nh',
    'about.coffee': 'C·ªëc c√† ph√™',
    'about.clients': 'Kh√°ch h√†ng h√†i l√≤ng',
    'about.experience': 'NƒÉm kinh nghi·ªám',
    
    // Experience Section
    'experience.title': 'Kinh nghi·ªám',
    'experience.vnr.title': 'Back-End Developer',
    'experience.vnr.company': 'VNR Software',
    'experience.vnr.period': 'Th√°ng 1/2024 - Hi·ªán t·∫°i',
    'experience.vnr.description': 'Ph√°t tri·ªÉn v√† tri·ªÉn khai ·ª©ng d·ª•ng ERP s·ª≠ d·ª•ng .NET 9 v√† Angular, √°p d·ª•ng ki·∫øn tr√∫c CQRS v√† c√°c th·ª±c h√†nh DevOps hi·ªán ƒë·∫°i. T√≠ch h·ª£p Redis, RabbitMQ v√† SignalR ƒë·ªÉ h·ªó tr·ª£ giao ti·∫øp th·ªùi gian th·ª±c, tin nh·∫Øn ph√¢n t√°n v√† x√°c th·ª±c ƒëa thi·∫øt b·ªã an to√†n. T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t h·ªá th·ªëng v·ªõi LINQ, stored procedures v√† background jobs s·ª≠ d·ª•ng Quartz. T√≠ch h·ª£p AWS S3 ƒë·ªÉ l∆∞u tr·ªØ file v√† tri·ªÉn khai ·ª©ng d·ª•ng tr√™n c·∫£ Windows (IIS) v√† Ubuntu (Docker, Docker Compose), ƒë·∫£m b·∫£o t√≠nh kh·∫£ d·ª•ng cao v√† kh·∫£ nƒÉng m·ªü r·ªông.',
    
    'experience.hoplong.title': 'Fullstack Developer',
    'experience.hoplong.company': 'HOP LONG TECH',
    'experience.hoplong.period': 'Th√°ng 8/2022 - Th√°ng 12/2023',
    'experience.hoplong.description': 'C√≥ kinh nghi·ªám ph√°t tri·ªÉn c√°c h·ªá th·ªëng doanh nghi·ªáp c√≥ th·ªÉ m·ªü r·ªông s·ª≠ d·ª•ng .NET v√† c√°c m·∫´u ki·∫øn tr√∫c hi·ªán ƒë·∫°i. Th√†nh c√¥ng trong vi·ªác cung c·∫•p c√°c gi·∫£i ph√°p ERP v√† t√≠ch h·ª£p v·ªõi tr·ªçng t√¢m m·∫°nh m·∫Ω v·ªÅ hi·ªáu su·∫•t, kh·∫£ nƒÉng b·∫£o tr√¨ v√† ki·∫øn tr√∫c s·∫°ch. D·∫´n ƒë·∫ßu vi·ªác ph√°t tri·ªÉn v√† b·∫£o tr√¨ ·ª©ng d·ª•ng ERP to√†n di·ªán bao g·ªìm c√°c module kinh doanh ch√≠nh nh∆∞ T√†i ch√≠nh, Chu·ªói cung ·ª©ng, H√†ng t·ªìn kho, Nh√¢n s·ª± v√† CRM.',
    
    // Education Section
    'education.title': 'H·ªçc v·∫•n',
    'education.bachelor.degree': 'C·ª≠ nh√¢n K·ªπ thu·∫≠t Ph·∫ßn m·ªÅm',
    'education.bachelor.school': 'ƒê·∫°i h·ªçc FPT',
    'education.bachelor.period': 'Th√°ng 9/2019 - Th√°ng 9/2024',
    'education.bachelor.description': 'H·ªçc t·∫≠p K·ªπ thu·∫≠t Ph·∫ßn m·ªÅm v·ªõi tr·ªçng t√¢m v√†o c√°c th·ª±c h√†nh ph√°t tri·ªÉn hi·ªán ƒë·∫°i, thi·∫øt k·∫ø h·ªá th·ªëng v√† ki·∫øn tr√∫c ph·∫ßn m·ªÅm.',
    
    'education.master.degree': 'Th·∫°c sƒ© H·ªá th·ªëng Th√¥ng tin',
    'education.master.school': 'ƒê·∫°i h·ªçc PTIT',
    'education.master.period': 'Th√°ng 7/2025 - Th√°ng 7/2027',
    'education.master.description': 'Theo h·ªçc b·∫±ng Th·∫°c sƒ© H·ªá th·ªëng Th√¥ng tin ƒë·ªÉ n√¢ng cao ki·∫øn th·ª©c v·ªÅ h·ªá th·ªëng doanh nghi·ªáp v√† qu·∫£n l√Ω d·ªØ li·ªáu.',
    
    // Services Section
    'services.title': 'D·ªãch v·ª•',
    'services.backend.name': 'Ph√°t tri·ªÉn Backend',
    'services.backend.description': 'Thi·∫øt k·∫ø v√† ph√°t tri·ªÉn c√°c h·ªá th·ªëng backend b·∫£o m·∫≠t, c√≥ th·ªÉ m·ªü r·ªông s·ª≠ d·ª•ng .NET, C# v√† c√°c m·∫´u ki·∫øn tr√∫c hi·ªán ƒë·∫°i nh∆∞ Clean Architecture v√† CQRS.',
    'services.database.name': 'Thi·∫øt k·∫ø C∆° s·ªü d·ªØ li·ªáu',
    'services.database.description': 'Chuy√™n gia trong thi·∫øt k·∫ø, t·ªëi ∆∞u h√≥a v√† qu·∫£n l√Ω c∆° s·ªü d·ªØ li·ªáu SQL Server. C√≥ kinh nghi·ªám v·ªõi Entity Framework Core v√† LINQ ƒë·ªÉ truy c·∫≠p d·ªØ li·ªáu hi·ªáu qu·∫£.',
    'services.integration.name': 'T√≠ch h·ª£p H·ªá th·ªëng',
    'services.integration.description': 'X√¢y d·ª±ng c√°c d·ªãch v·ª• middleware v√† t√≠ch h·ª£p API cho c√°c n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠, h·ªá th·ªëng ERP v√† d·ªãch v·ª• b√™n th·ª© ba v·ªõi ƒë·ªìng b·ªô h√≥a th·ªùi gian th·ª±c.',
    'services.custom': 'T√¨m ki·∫øm d·ªãch v·ª• t√πy ch·ªânh?',
    'services.contact': 'Nh·∫•p v√†o ƒë√¢y ƒë·ªÉ li√™n h·ªá v·ªõi t√¥i!',
    
    // Works Section
    'works.title': 'D·ª± √°n g·∫ßn ƒë√¢y',
    'works.view': 'Xem t·∫•t c·∫£',
    
    // Contact Section
    'contact.title': 'Li√™n h·ªá',
    'contact.description': 'Kh√¥ng th√≠ch form? G·ª≠i email cho t√¥i. üëã',
    'contact.email': 'Email',
    'contact.phone': 'ƒêi·ªán tho·∫°i',
    'contact.location': 'ƒê·ªãa ch·ªâ',
    'contact.github': 'GitHub',
    'contact.linkedin': 'LinkedIn',
    'contact.facebook': 'Facebook',
    'contact.talk': 'H√£y n√≥i chuy·ªán v·ªÅ m·ªçi th·ª©!',
    
    // Contact Page
    'contact.page.title': 'Li√™n h·ªá v·ªõi t√¥i',
    'contact.page.breadcrumb.home': 'Trang ch·ªß',
    'contact.page.breadcrumb.contact': 'Li√™n h·ªá',
    'contact.page.form.name': 'T√™n c·ªßa b·∫°n',
    'contact.page.form.email': 'ƒê·ªãa ch·ªâ email',
    'contact.page.form.subject': 'Ch·ªß ƒë·ªÅ',
    'contact.page.form.message': 'N·ªôi dung tin nh·∫Øn',
    'contact.page.form.submit': 'G·ª≠i tin nh·∫Øn',
    'contact.page.address': 'ƒê·ªãa ch·ªâ',
    'contact.page.social': 'M·∫°ng x√£ h·ªôi',
    'contact.page.greeting': 'T√¥i r·∫•t mong ƒë∆∞·ª£c nghe t·ª´ b·∫°n. üëã',
    
    // CV Page
    'cv.name': 'Nguy·ªÖn Ti·∫øn ƒê·∫°t',
    'cv.position': 'Backend Developer',
    'cv.aboutMe.title': 'GI·ªöI THI·ªÜU',
    'cv.aboutMe.content': 'T√¥i l√† m·ªôt backend developer chuy√™n thi·∫øt k·∫ø c√°c h·ªá th·ªëng b·∫£o m·∫≠t v√† hi·ªáu qu·∫£ s·ª≠ d·ª•ng c√°c ng√¥n ng·ªØ nh∆∞ C# v√† c∆° s·ªü d·ªØ li·ªáu nh∆∞ SQL Server. ƒêam m√™ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v√† h·ªçc h·ªèi c√¥ng ngh·ªá m·ªõi, t√¥i lu√¥n h∆∞·ªõng t·ªõi c√°c gi·∫£i ph√°p t·ªëi ∆∞u v√† b·ªÅn v·ªØng.',
    'cv.skills.title': 'K·ª∏ NƒÇNG',
    'cv.education.title': 'H·ªåC V·∫§N',
    'cv.education.bachelor': 'C·ª¨ NH√ÇN',
    'cv.education.master': 'Th·∫°c sƒ©',
    'cv.education.bachelor.school': 'ƒê·∫°i h·ªçc FPT',
    'cv.education.bachelor.major': 'K·ªπ thu·∫≠t ph·∫ßn m·ªÅm',
    'cv.education.master.school': 'ƒê·∫°i h·ªçc PTIT',
    'cv.education.master.major': 'H·ªá th·ªëng th√¥ng tin (IS)',
    'cv.futureGoals.title': 'M·ª§C TI√äU T∆Ø∆†NG LAI',
    'cv.futureGoals.ielts': 'IELTS 6.5 - 7.0',
    'cv.futureGoals.fullstack': 'Fullstack developer',
    'cv.workExperience.title': 'KINH NGHI·ªÜM L√ÄM VI·ªÜC',
    'cv.workExperience.overview': 'T·ªïng quan',
    'cv.workExperience.description': 'M√¥ t·∫£:',
    'cv.workExperience.techStack': 'C√¥ng ngh·ªá:',
    'cv.workExperience.achievements': 'Th√†nh t·ª±u:',
    'cv.vnr.position': 'Back-End Developer',
    'cv.vnr.period': '1/2024 - Hi·ªán t·∫°i',
    'cv.vnr.overview1': 'Ph√°t tri·ªÉn v√† tri·ªÉn khai ·ª©ng d·ª•ng ERP s·ª≠ d·ª•ng .NET 9 v√† Angular, √°p d·ª•ng ki·∫øn tr√∫c CQRS v√† c√°c th·ª±c h√†nh DevOps hi·ªán ƒë·∫°i. T√≠ch h·ª£p Redis, RabbitMQ v√† SignalR ƒë·ªÉ h·ªó tr·ª£ giao ti·∫øp th·ªùi gian th·ª±c, tin nh·∫Øn ph√¢n t√°n v√† x√°c th·ª±c ƒëa thi·∫øt b·ªã an to√†n.',
    'cv.vnr.overview2': 'T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t h·ªá th·ªëng v·ªõi LINQ, stored procedures v√† background jobs s·ª≠ d·ª•ng Quartz. T√≠ch h·ª£p AWS S3 ƒë·ªÉ l∆∞u tr·ªØ file v√† tri·ªÉn khai ·ª©ng d·ª•ng tr√™n c·∫£ Windows (IIS) v√† Ubuntu (Docker, Docker Compose), ƒë·∫£m b·∫£o t√≠nh kh·∫£ d·ª•ng cao v√† kh·∫£ nƒÉng m·ªü r·ªông.',
    'cv.vnr.project1.title': '1. H·ªá th·ªëng ERP ‚Äî V2 (Ho·∫°ch ƒë·ªãnh Ngu·ªìn l·ª±c Doanh nghi·ªáp)',
    'cv.vnr.project1.description': 'ƒê√≥ng g√≥p v√†o vi·ªác ph√°t tri·ªÉn v√† b·∫£o tr√¨ h·ªá th·ªëng ERP c·∫•p doanh nghi·ªáp ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ qu·∫£n l√Ω c√°c module t√†i ch√≠nh, h√†ng t·ªìn kho, chu·ªói cung ·ª©ng v√† nh√¢n s·ª± tr√™n nhi·ªÅu ph√≤ng ban. D·ª± √°n t·∫≠p trung v√†o vi·ªác hi·ªán ƒë·∫°i h√≥a h·ªá th·ªëng hi·ªán c√≥ b·∫±ng c√°ch √°p d·ª•ng CQRS, c·∫£i thi·ªán chi·∫øn l∆∞·ª£c tri·ªÉn khai v√† th√™m c√°c th√†nh ph·∫ßn giao ti·∫øp th·ªùi gian th·ª±c v√† x·ª≠ l√Ω ph√¢n t√°n.',
    'cv.vnr.project1.techStack': '.NET 9, PostgreSQL, Angular, Redis, RabbitMQ, SignalR, AWS S3, Docker/Docker Compose, Quartz.',
    'cv.vnr.project1.achievement1': 'Thi·∫øt k·∫ø v√† tri·ªÉn khai x√°c th·ª±c d·ª±a tr√™n Redis ƒë·ªÉ qu·∫£n l√Ω access tokens v√† ngƒÉn ch·∫∑n ƒëƒÉng nh·∫≠p tr√°i ph√©p tr√™n nhi·ªÅu thi·∫øt b·ªã.',
    'cv.vnr.project1.achievement2': 'T√≠ch h·ª£p RabbitMQ v√† SignalR ƒë·ªÉ x·ª≠ l√Ω background jobs v√† ƒë·∫©y th√¥ng b√°o th·ªùi gian th·ª±c ƒë·∫øn ng∆∞·ªùi d√πng.',
    'cv.vnr.project1.achievement3': 'S·ª≠ d·ª•ng Quartz ƒë·ªÉ l√™n l·ªãch v√† th·ª±c thi c√°c t√°c v·ª• n·ªÅn (c√¥ng vi·ªác ƒë·ªãnh k·ª≥ v√† ƒë·ªìng b·ªô h√≥a d·ªØ li·ªáu).',
    'cv.vnr.project1.achievement4': 'C·∫£i thi·ªán hi·ªáu su·∫•t b·∫±ng c√°ch √°p d·ª•ng LINQ ƒë·ªÉ thao t√°c d·ªØ li·ªáu v√† stored procedures cho c√°c truy v·∫•n ph·ª©c t·∫°p trong PostgreSQL.',
    'cv.vnr.project1.achievement5': 'Tri·ªÉn khai v√† c·∫•u h√¨nh AWS S3 ƒë·ªÉ l∆∞u tr·ªØ v√† qu·∫£n l√Ω file ng∆∞·ªùi d√πng m·ªôt c√°ch an to√†n.',
    'cv.vnr.project1.achievement6': 'Tri·ªÉn khai h·ªá th·ªëng tr√™n IIS (Windows) v√† Docker/Docker Compose (Ubuntu), cho ph√©p m√¥i tr∆∞·ªùng linh ho·∫°t v√† nh·∫•t qu√°n tr√™n staging v√† production.',
    'cv.hoplong.position': 'Fullstack Developer',
    'cv.hoplong.period': '08/2022 - 12/2023',
    'cv.hoplong.overview': 'C√≥ kinh nghi·ªám ph√°t tri·ªÉn c√°c h·ªá th·ªëng doanh nghi·ªáp c√≥ th·ªÉ m·ªü r·ªông s·ª≠ d·ª•ng .NET v√† c√°c m·∫´u ki·∫øn tr√∫c hi·ªán ƒë·∫°i. Th√†nh c√¥ng trong vi·ªác cung c·∫•p c√°c gi·∫£i ph√°p ERP v√† t√≠ch h·ª£p v·ªõi tr·ªçng t√¢m m·∫°nh m·∫Ω v·ªÅ hi·ªáu su·∫•t, kh·∫£ nƒÉng b·∫£o tr√¨ v√† ki·∫øn tr√∫c s·∫°ch.',
    'cv.hoplong.project1.title': '1. H·ªá th·ªëng ERP',
    'cv.hoplong.project1.description': 'D·∫´n ƒë·∫ßu vi·ªác ph√°t tri·ªÉn v√† b·∫£o tr√¨ ·ª©ng d·ª•ng ERP to√†n di·ªán bao g·ªìm c√°c module kinh doanh ch√≠nh nh∆∞ T√†i ch√≠nh, Chu·ªói cung ·ª©ng, H√†ng t·ªìn kho, Nh√¢n s·ª± v√† CRM. D·ª± √°n ƒë∆∞·ª£c ph√°t tri·ªÉn theo m√¥ h√¨nh ki·∫øn tr√∫c MVC, v·ªõi tr·ªçng t√¢m m·∫°nh m·∫Ω v·ªÅ kh·∫£ nƒÉng m·ªü r·ªông, b·∫£o tr√¨ v√† hi·ªáu su·∫•t.',
    'cv.hoplong.project1.techStack': '.NET, SQL Server, AngularJS.',
    'cv.hoplong.project1.achievement1': 'S·ª≠ d·ª•ng Dapper v√† LINQ ƒë·ªÉ truy c·∫≠p v√† thao t√°c d·ªØ li·ªáu hi·ªáu qu·∫£, t·ªëi ∆∞u h√≥a c√°c truy v·∫•n c∆° s·ªü d·ªØ li·ªáu ‚Üí gi·∫£m th·ªùi gian ph·∫£n h·ªìi v√† c·∫£i thi·ªán th√¥ng l∆∞·ª£ng.',
    'cv.hoplong.project1.achievement2': 'Thi·∫øt k·∫ø v√† ph√°t tri·ªÉn c√°c t√≠nh nƒÉng b√°o c√°o c√≥ th·ªÉ c·∫•u h√¨nh ph√π h·ª£p v·ªõi nhi·ªÅu ph√≤ng ban.',
    'cv.hoplong.project1.achievement3': 'X√¢y d·ª±ng c√°c module frontend ph·∫£n h·ªìi v√† th√¢n thi·ªán v·ªõi ng∆∞·ªùi d√πng b·∫±ng AngularJS, ƒë·∫£m b·∫£o t∆∞∆°ng t√°c m∆∞·ª£t m√† v√† c·∫≠p nh·∫≠t th·ªùi gian th·ª±c tr√™n c√°c module ERP.',
    'cv.hoplong.project1.achievement4': 'ƒê·∫£m b·∫£o t√≠nh ·ªïn ƒë·ªãnh v√† ƒë·ªô tin c·∫≠y cao c·ªßa h·ªá th·ªëng trong qu√° tr√¨nh s·ª≠ d·ª•ng h√†ng ng√†y b·∫±ng c√°ch √°p d·ª•ng c√°c nguy√™n t·∫Øc ki·∫øn tr√∫c s·∫°ch v√† t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t.',
    'cv.hoplong.project2.title': '2. H·ªá th·ªëng k·∫øt n·ªëi v·ªõi n·ªÅn t·∫£ng Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠',
    'cv.hoplong.project2.description': 'X√¢y d·ª±ng t·ª´ ƒë·∫ßu m·ªôt d·ªãch v·ª• middleware ƒë·ªÉ t√≠ch h·ª£p TikTok platform APIs v√† ƒë·ªìng b·ªô h√≥a d·ªØ li·ªáu v·ªõi h·ªá th·ªëng ERP. Gi·∫£i ph√°p ƒë∆∞·ª£c thi·∫øt k·∫ø d·ª±a tr√™n ki·∫øn tr√∫c c∆° s·ªü v√† tri·ªÉn khai s·ª≠ d·ª•ng Ki·∫øn tr√∫c Ba l·ªõp (Presentation, Business Logic, Data Access) ƒë·ªÉ ƒë·∫£m b·∫£o kh·∫£ nƒÉng m·ªü r·ªông, b·∫£o tr√¨ v√† kh·∫£ nƒÉng m·ªü r·ªông cho c√°c n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ trong t∆∞∆°ng lai.',
    'cv.hoplong.project2.techStack': '.NET, SQL Server',
    'cv.hoplong.project2.achievement1': 'X√¢y d·ª±ng t√≠ch h·ª£p API hai chi·ªÅu v·ªõi TikTok, t·∫≠n d·ª•ng h·ªó tr·ª£ webhook ƒë·ªÉ ƒë·ªìng b·ªô h√≥a th·ªùi gian th·ª±c ƒë∆°n h√†ng, h√†ng t·ªìn kho v√† d·ªØ li·ªáu kh√°ch h√†ng.',
    'cv.hoplong.project2.achievement2': 'T·ª± ƒë·ªông h√≥a c√°c quy tr√¨nh ETL ƒë·ªÉ ƒë·∫£m b·∫£o thu th·∫≠p ch√≠nh x√°c v√† k·ªãp th·ªùi d·ªØ li·ªáu marketing v√† b√°n h√†ng tr√™n nhi·ªÅu n·ªÅn t·∫£ng.',
    'cv.hoplong.project2.achievement3': 'Ph√°t tri·ªÉn pipeline d·ªØ li·ªáu Facebook Ads, tr√≠ch xu·∫•t v√† chuy·ªÉn ƒë·ªïi th√¥ng tin chi·∫øn d·ªãch, b√°o c√°o hi·ªáu su·∫•t qu·∫£ng c√°o, doanh thu v√† s·ªë li·ªáu chi ph√≠ ƒë·ªÉ b√°o c√°o ERP h·ª£p nh·∫•t.',
    'cv.hoplong.project2.achievement4': 'Tri·ªÉn khai pipeline d·ªØ li·ªáu Facebook Ads ƒë·ªÉ tr√≠ch xu·∫•t, chuy·ªÉn ƒë·ªïi v√† t·∫£i c√°c s·ªë li·ªáu hi·ªáu su·∫•t chi·∫øn d·ªãch v√†o h·ªá th·ªëng ERP.',
    'cv.personalProject.title': 'D·ª∞ √ÅN C√Å NH√ÇN',
    'cv.personalProject.ecommerce.title': 'D·ª± √°n Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠',
    'cv.personalProject.ecommerce.techStack': 'Core, Data: .NET 9, C# 13, ASP.NET Core, EF Core, PostgreSQL.',
    'cv.personalProject.ecommerce.patterns': 'Patterns: Clean Architecture, CQRS.',
    'cv.personalProject.ecommerce.utilities': 'Utilities: FluentValidation, AutoMapper, Serilog.',
    'cv.personalProject.ecommerce.description': 'ƒê√¢y l√† m·ªôt n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ m·∫°nh m·∫Ω ƒë∆∞·ª£c x√¢y d·ª±ng v·ªõi .NET 9, s·ª≠ d·ª•ng ASP.NET Core, Entity Framework Core v√† MediatR. N√≥ tu√¢n theo c√°c m·∫´u thi·∫øt k·∫ø Clean Architecture v√† CQRS ƒë·ªÉ c√≥ kh·∫£ nƒÉng m·ªü r·ªông v√† b·∫£o tr√¨. C√°c t√≠nh nƒÉng ch√≠nh bao g·ªìm x√°c th·ª±c ng∆∞·ªùi d√πng an to√†n v·ªõi JWT, qu·∫£n l√Ω s·∫£n ph·∫©m to√†n di·ªán v√† x√°c th·ª±c m·∫°nh m·∫Ω v·ªõi FluentValidation. D·ª± √°n s·ª≠ d·ª•ng PostgreSQL ƒë·ªÉ l∆∞u tr·ªØ d·ªØ li·ªáu, t√≠ch h·ª£p logging v√† x·ª≠ l√Ω l·ªói to√†n di·ªán, v√† h·ªó tr·ª£ unit testing v√† integration testing ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·ªô tin c·∫≠y. N√≥ ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ x·ª≠ l√Ω c√°c m√¥i tr∆∞·ªùng c√≥ l∆∞u l∆∞·ª£ng truy c·∫≠p cao v·ªõi tr·ªçng t√¢m m·∫°nh m·∫Ω v·ªÅ b·∫£o m·∫≠t v√† t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t.',
  }
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('vi');

  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as Language;
    if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'vi')) {
      setLanguage(savedLanguage);
    }
  }, []);

  const handleSetLanguage = (lang: Language) => {
    setLanguage(lang);
    localStorage.setItem('language', lang);
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations[typeof language]] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage: handleSetLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
